-- USERS & QUOTAS â€” adjust as needed (run as SYS or privileged user)
-- CREATE USER SAGA_USER IDENTIFIED BY SAGA_PASS;
-- GRANT CONNECT, RESOURCE TO SAGA_USER;
-- ALTER USER SAGA_USER QUOTA UNLIMITED ON USERS;

CREATE
USER SAGA_MGMT IDENTIFIED BY "dudkrish1A";

GRANT CREATE
SESSION TO SAGA_MGMT;

GRANT DBA TO SAGA_MGMT;

ALTER USER SAGA_MGMT QUOTA UNLIMITED ON USERS;
-- Login as SAGA_USER and run:

-- SEQUENCES
CREATE SEQUENCE ORDERS_SEQ START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE PAYMENTS_SEQ START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE INVENTORY_SEQ START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

-- TABLES
CREATE TABLE ORDERS
(
    ID         NUMBER PRIMARY KEY,
    STATUS     VARCHAR2(20) NOT NULL,
    AMOUNT     NUMBER NOT NULL,
    PRODUCT_ID NUMBER NOT NULL,
    QTY        NUMBER NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE PAYMENTS
(
    ID         NUMBER PRIMARY KEY,
    ORDER_ID   NUMBER NOT NULL,
    STATUS     VARCHAR2(20) NOT NULL,
    AMOUNT     NUMBER NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_PAY_ORDER FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ID)
);

CREATE TABLE INVENTORY
(
    ID         NUMBER PRIMARY KEY,
    ORDER_ID   NUMBER NOT NULL,
    PRODUCT_ID NUMBER NOT NULL,
    QTY        NUMBER NOT NULL,
    STATUS     VARCHAR2(20) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_INV_ORDER FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ID)
);

-- OPTIONAL: simple stock table to check real availability (not used in demo services)
-- CREATE TABLE STOCK (PRODUCT_ID NUMBER PRIMARY KEY, AVAILABLE_QTY NUMBER NOT NULL);

-- (No triggers needed because we use JPA SEQUENCE strategy)
